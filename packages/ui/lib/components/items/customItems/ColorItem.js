import{el as i}from"@fils/utils";import{drawColorPickerBar as n,drawColorPickerSL as r,hsbToHex as l,hexToRgb as g,rgbToHsb as c,fixHex as v}from"@fils/color";import o from"../../../utils/check";import{Panel as p}from"../../Panel";import{Item as u}from"../Item";const s={type:"color",input:"_ui-color-input",box:"_ui-color-box",view:"_ui-color-view",info:"_ui-color-info",canvas:"_ui-color-canvas",target:"_ui-color-target",dragger:"_ui-color-dragger"};export class ColorPanel extends p{constructor(){super(...arguments);this.view=i("div");this.info=i("div");this.canvas1=i("canvas");this.canvas2=i("canvas");this.width=0;this.color={h:0,s:0,b:0};this.target=i("div");this.dragger=i("div");this.dragging1=!1;this.dragging2=!1}createPanelContent(){this.view=i("div",s.view,this.el),this.info=i("div",s.info,this.el),this.target=i("div",s.target,this.view),this.dragger=i("div",s.dragger,this.info),this.canvas1=i("canvas",s.canvas,this.view),this.canvas2=i("canvas",s.canvas,this.info),this.canvas1.width=this.canvas1.height=200,this.canvas2.width=200,this.canvas2.height=20,setTimeout(()=>this.reverseUpdate(),10)}addEventListeners(){super.addEventListeners(),window.addEventListener("mouseup",t=>{var a;if(!this.created)return;if(this.dragging1||this.dragging2){this.dragging1=!1,this.dragging2=!1;return}const e=t.target;(a=this.el)!=null&&a.contains(e)||this.parent.el.contains(e)||this.destroy()}),window.addEventListener("mousedown",t=>{if(!this.created)return;const e=t.target;(e===this.canvas1||e===this.target)&&(this.dragging1=!0),(e===this.canvas2||e===this.dragger)&&(this.dragging2=!0),this.dragging1&&this.updateCanvas1(t.pageX,t.pageY),this.dragging2&&this.updateCanvas2(t.pageX)}),window.addEventListener("mousemove",t=>{this.created&&(!this.dragging1&&!this.dragging2||(this.dragging1&&this.updateCanvas1(t.pageX,t.pageY),this.dragging2&&this.updateCanvas2(t.pageX)))})}reverseUpdate(){this.color=c(g(this.parent.value)),this.width=this.view.getBoundingClientRect().width;let t=0,e=0;t=this.color.s*this.width/100,e=this.width-this.color.b*this.width/100,this.target.style.left=`${t}px`,this.target.style.top=`${e}px`,t=this.color.h*this.width/360,this.dragger.style.left=`${t}px`,r(this.canvas1,this.color.h),n(this.canvas2)}update(){this.width=this.view.getBoundingClientRect().width,r(this.canvas1,this.color.h),n(this.canvas2),this.parent.setValue(l(this.color))}updateCanvas1(t,e){const a=this.canvas1.getBoundingClientRect();t=Math.min(Math.max(t-a.left,0),this.width),e=Math.min(Math.max(e-a.top,0),this.width),this.color.s=Math.round(100*t/this.width),this.color.b=100-Math.round(100*e/this.width),this.target.style.left=`${t}px`,this.target.style.top=`${e}px`,this.update()}updateCanvas2(t){const e=this.canvas2.getBoundingClientRect();t=Math.min(Math.max(t-e.left,1),this.width-1),this.color.h=360*t/this.width,this.dragger.style.left=`${t}px`,this.update()}}export class ColorItem extends u{constructor(){super(...arguments);this.input=i("input");this.colorBox=i("div");this.panel=null}afterCreate(){this.panel=new ColorPanel(this,this.el)}addEventListeners(){this.input.addEventListener("change",()=>{this.setValue(this.input.value)}),this.colorBox.addEventListener("click",()=>{this.panel.created?this.panel.destroy():this.panel.create()}),window.addEventListener("keydown",t=>{t.key==="Enter"&&this.setValue(this.input.value)})}createContent(){this.colorBox=i("div"),this.colorBox.classList.add(s.box),this.content.appendChild(this.colorBox),this.input=i("input"),this.input.type="text",this.input.classList.add(s.input),this.content.appendChild(this.input)}setValue(t){(o.isNull(t)||o.isUndefined(t)||t==="")&&(t="#FFFFFF"),t=v(t),this.panel.created&&this.panel.reverseUpdate(),super.setValue(t)}refreshDom(){this.colorBox.style.setProperty("--active-color",this.value),this.input.value=this.value,super.refreshDom()}}
//# sourceMappingURL=ColorItem.js.map
