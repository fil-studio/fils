{
  "version": 3,
  "sources": ["../../../../src/components/items/customItems/ColorItem.ts"],
  "sourcesContent": ["import { el } from \"@fils/utils\";\nimport { drawColorPickerBar, drawColorPickerSL, HSBColor, hsbToHex, hexToRgb, rgbToHsb, fixHex } from '@fils/color';\nimport { CSS_UI } from \"../../../partials/cssClasses\";\nimport check from \"../../../utils/check\";\nimport { Panel } from \"../../Panel\";\nimport { Item } from \"../Item\";\n\nconst c = {\n\ttype: 'color',\n\tinput: '_ui-color-input',\n\tbox: '_ui-color-box',\n\n\tview: '_ui-color-view',\n\tinfo: '_ui-color-info',\n\tcanvas: '_ui-color-canvas',\n\n\ttarget: '_ui-color-target',\n\tdragger: '_ui-color-dragger',\n};\n\n\nexport class ColorPanel extends Panel {\n\tview: HTMLElement = el('div');\n\tinfo: HTMLElement = el('div');\n\n\tcanvas1: HTMLCanvasElement = el('canvas') as HTMLCanvasElement;\n\tcanvas2: HTMLCanvasElement = el('canvas') as HTMLCanvasElement;\n\n\twidth: number = 0;\n\tcolor: HSBColor = { h: 0, s: 0, b: 0 };\n\n\ttarget: HTMLElement = el('div');\n\tdragger: HTMLElement = el('div');\n\n\tdragging1: boolean = false;\n\tdragging2: boolean = false;\n\n\tcreatePanelContent(): void {\n\n\t\tthis.view = el('div', c.view, this.el);\n\t\tthis.info = el('div', c.info, this.el);\n\n\t\tthis.target = el('div', c.target, this.view);\n\t\tthis.dragger = el('div', c.dragger, this.info);\n\n\t\tthis.canvas1 = el('canvas', c.canvas, this.view) as HTMLCanvasElement;\n\t\tthis.canvas2 = el('canvas', c.canvas, this.info) as HTMLCanvasElement;\n\n\t\tthis.canvas1.width = this.canvas1.height = 200;\n\t\tthis.canvas2.width = 200;\n\t\tthis.canvas2.height = 20;\n\n\t\t// Aixo dinamic\n\t\tsetTimeout(() => this.reverseUpdate(), 10);\n\t}\n\n\taddEventListeners(): void {\n\n\t\tsuper.addEventListeners();\n\n\t\twindow.addEventListener('mouseup', (e: MouseEvent) => {\n\t\t\tif(!this.created) return;\n\n\t\t\tif(this.dragging1 || this.dragging2){\n\t\t\t\tthis.dragging1 = false;\n\t\t\t\tthis.dragging2 = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst target = e.target as HTMLElement;\n\t\t\tif(this.el?.contains(target)) return;\n\t\t\tif(this.parent!.el.contains(target)) return;\n\n\t\t\tthis.destroy();\n\t\t});\n\n\t\twindow.addEventListener('mousedown', (e: MouseEvent) => {\n\t\t\tif(!this.created) return;\n\t\t\tconst t = e.target;\n\t\t\tif(t === this.canvas1 || t === this.target) this.dragging1 = true;\n\t\t\tif(t === this.canvas2 || t === this.dragger) this.dragging2 = true;\n\n\t\t\tif(this.dragging1) this.updateCanvas1(e.pageX, e.pageY);\n\t\t\tif(this.dragging2) this.updateCanvas2(e.pageX);\n\t\t});\n\n\t\twindow.addEventListener('mousemove', (e: MouseEvent) => {\n\t\t\tif(!this.created) return;\n\t\t\tif(!this.dragging1 && !this.dragging2) return;\n\n\t\t\tif(this.dragging1) this.updateCanvas1(e.pageX, e.pageY);\n\t\t\tif(this.dragging2) this.updateCanvas2(e.pageX);\n\t\t});\n\t}\n\n\treverseUpdate(){\n\n\t\tthis.color = rgbToHsb(hexToRgb(this.parent!.value));\n\n\t\tthis.width = this.view.getBoundingClientRect().width;\n\n\t\tlet x = 0;\n\t\tlet y = 0;\n\n\t\t// Canvas 1\n\t\tx = this.color.s * this.width / 100;\n\t\ty = this.width - this.color.b * this.width / 100;\n\t\tthis.target.style.left = `${x}px`;\n\t\tthis.target.style.top = `${y}px`;\n\n\n\t\t// Canvas 2\n\t\tx = this.color.h * this.width / 360;\n\n\t\tthis.dragger.style.left = `${x}px`;\n\n\t\tdrawColorPickerSL(this.canvas1, this.color.h);\n\t\tdrawColorPickerBar(this.canvas2);\n\n\t}\n\n\tupdate(){\n\t\tthis.width = this.view.getBoundingClientRect().width;\n\n\t\tdrawColorPickerSL(this.canvas1, this.color.h);\n\t\tdrawColorPickerBar(this.canvas2);\n\n\t\t// Todo aqui update de l'Item parent\n\t\tthis.parent!.setValue(hsbToHex(this.color));\n\t}\n\n\tupdateCanvas1(x:number, y:number): void {\n\n\t\tconst r = this.canvas1.getBoundingClientRect();\n\t\tx = Math.min(Math.max(x - r.left, 0), this.width);\n\t\ty = Math.min(Math.max(y - r.top, 0), this.width);\n\n\t\tthis.color.s = Math.round(100 * x / this.width);\n\t\tthis.color.b = 100 - Math.round(100 * y / this.width);\n\n\t\tthis.target.style.left = `${x}px`;\n\t\tthis.target.style.top = `${y}px`;\n\n\t\tthis.update();\n\t}\n\n\tupdateCanvas2(x:number): void {\n\n\t\tconst r = this.canvas2.getBoundingClientRect();\n\t\tx = Math.min(Math.max(x - r.left, 1), this.width - 1);\n\n\t\tthis.color.h = 360 * x / this.width;\n\n\t\tthis.dragger.style.left = `${x}px`;\n\n\t\tthis.update();\n\t}\n\n\n}\nexport class ColorItem extends Item {\n\tinput: HTMLInputElement = el('input') as HTMLInputElement;\n\tcolorBox: HTMLElement = el('div');\n\tpanel: ColorPanel | null = null;\n\n\tafterCreate(): void {\n\t\tthis.panel! = new ColorPanel(this, this.el);\n\t}\n\n\tprotected addEventListeners(): void {\n\n\t\tthis.input.addEventListener('change', () => {\n\t\t\tthis.setValue(this.input.value);\n\t\t});\n\n\t\tthis.colorBox.addEventListener('click', () => {\n\t\t\tif(!this.panel!.created) this.panel!.create();\n\t\t\telse this.panel!.destroy();\n\t\t});\n\n\t\twindow.addEventListener('keydown', (e:KeyboardEvent)=> {\n\t\t\tif(e.key === 'Enter') this.setValue(this.input.value);\n\t\t});\n\n\t}\n\n\tprotected createContent(): void {\n\t\tthis.colorBox = el('div', );\n\t\tthis.colorBox.classList.add(c.box);\n\t\tthis.content.appendChild(this.colorBox);\n\n\t\tthis.input = el('input') as HTMLInputElement;\n\t\tthis.input.type = 'text';\n\t\tthis.input.classList.add(c.input);\n\t\tthis.content.appendChild(this.input);\n\n\n\t}\n\n\tsetValue(value: any): void {\n\n\t\tif (check.isNull(value) || check.isUndefined(value) || value === '') {\n\t\t\tvalue = '#FFFFFF';\n\t\t}\n\t\tvalue = fixHex(value);\n\n\t\tif(this.panel!.created){\n\t\t\tthis.panel!.reverseUpdate();\n\t\t}\n\n\t\tsuper.setValue(value);\n\t}\n\n\trefreshDom(): void {\n\n\t\tthis.colorBox.style.setProperty('--active-color', this.value);\n\t\tthis.input.value = this.value;\n\n\t\tsuper.refreshDom();\n\t}\n}\n\n"],
  "mappings": "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",
  "names": ["el", "drawColorPickerBar", "drawColorPickerSL", "hsbToHex", "hexToRgb", "rgbToHsb", "fixHex", "check", "Panel", "Item", "c", "e", "_a", "target", "t", "x", "y", "r", "value"]
}
