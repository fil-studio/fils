{
  "version": 3,
  "sources": ["../../../../src/components/items/customItems/ColorItem.ts"],
  "sourcesContent": ["import { el } from \"@fils/utils\";\nimport { drawColorPickerBar, drawColorPickerSL, HSBColor, hsbToHex, hexToRgb, rgbToHsb, fixHex } from '@fils/color';\nimport { CSS_UI } from \"../../../partials/cssClasses\";\nimport check from \"../../../utils/check\";\nimport { Panel } from \"../../Panel\";\nimport { Item } from \"../Item\";\n\nconst c = {\n\ttype: 'color',\n\tinput: '_ui-color-input',\n\tbox: '_ui-color-box',\n\n\tview: '_ui-color-view',\n\tinfo: '_ui-color-info',\n\tcanvas: '_ui-color-canvas',\n\n\ttarget: '_ui-color-target',\n\tdragger: '_ui-color-dragger',\n};\n\n\nexport class ColorPanel extends Panel {\n\tview: HTMLElement = el('div');\n\tinfo: HTMLElement = el('div');\n\n\tcanvas1: HTMLCanvasElement = el('canvas') as HTMLCanvasElement;\n\tcanvas2: HTMLCanvasElement = el('canvas') as HTMLCanvasElement;\n\n\twidth: number = 0;\n\tcolor: HSBColor = { h: 0, s: 0, b: 0 };\n\n\ttarget: HTMLElement = el('div');\n\tdragger: HTMLElement = el('div');\n\n\tdragging1: boolean = false;\n\tdragging2: boolean = false;\n\n\tcreatePanelContent(): void {\n\n\t\tthis.view = el('div', c.view, this.el);\n\t\tthis.info = el('div', c.info, this.el);\n\n\t\tthis.target = el('div', c.target, this.view);\n\t\tthis.dragger = el('div', c.dragger, this.info);\n\n\t\tthis.canvas1 = el('canvas', c.canvas, this.view) as HTMLCanvasElement;\n\t\tthis.canvas2 = el('canvas', c.canvas, this.info) as HTMLCanvasElement;\n\n\t\tthis.canvas1.width = this.canvas1.height = 200;\n\t\tthis.canvas2.width = 200;\n\t\tthis.canvas2.height = 20;\n\n\t\t// Aixo dinamic\n\t\tsetTimeout(() => this.reverseUpdate(), 10);\n\t}\n\n\taddEventListeners(): void {\n\n\t\tsuper.addEventListeners();\n\n\t\twindow.addEventListener('mouseup', (e: MouseEvent) => {\n\t\t\tif(!this.created) return;\n\n\t\t\tif(this.dragging1 || this.dragging2){\n\t\t\t\tthis.dragging1 = false;\n\t\t\t\tthis.dragging2 = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst target = e.target as HTMLElement;\n\t\t\tif(this.el?.contains(target)) return;\n\t\t\tif(this.parent!.el.contains(target)) return;\n\n\t\t\tthis.destroy();\n\t\t});\n\n\t\twindow.addEventListener('mousedown', (e: MouseEvent) => {\n\t\t\tif(!this.created) return;\n\t\t\tconst t = e.target;\n\t\t\tif(t === this.canvas1 || t === this.target) this.dragging1 = true;\n\t\t\tif(t === this.canvas2 || t === this.dragger) this.dragging2 = true;\n\n\t\t\tif(this.dragging1) this.updateCanvas1(e.pageX, e.pageY);\n\t\t\tif(this.dragging2) this.updateCanvas2(e.pageX);\n\t\t});\n\n\t\twindow.addEventListener('mousemove', (e: MouseEvent) => {\n\t\t\tif(!this.created) return;\n\t\t\tif(!this.dragging1 && !this.dragging2) return;\n\n\t\t\tif(this.dragging1) this.updateCanvas1(e.pageX, e.pageY);\n\t\t\tif(this.dragging2) this.updateCanvas2(e.pageX);\n\t\t});\n\t}\n\n\treverseUpdate(){\n\n\t\tthis.color = rgbToHsb(hexToRgb(this.parent!.value));\n\n\t\tthis.width = this.view.getBoundingClientRect().width;\n\n\t\tlet x = 0;\n\t\tlet y = 0;\n\n\t\t// Canvas 1\n\t\tx = this.color.s * this.width / 100;\n\t\ty = this.width - this.color.b * this.width / 100;\n\t\tthis.target.style.left = `${x}px`;\n\t\tthis.target.style.top = `${y}px`;\n\n\n\t\t// Canvas 2\n\t\tx = this.color.h * this.width / 360;\n\n\t\tthis.dragger.style.left = `${x}px`;\n\n\t\tdrawColorPickerSL(this.canvas1, this.color.h);\n\t\tdrawColorPickerBar(this.canvas2);\n\n\t}\n\n\tupdate(){\n\t\tthis.width = this.view.getBoundingClientRect().width;\n\n\t\tdrawColorPickerSL(this.canvas1, this.color.h);\n\t\tdrawColorPickerBar(this.canvas2);\n\n\t\t// Todo aqui update de l'Item parent\n\t\tthis.parent!.setValue(hsbToHex(this.color));\n\t}\n\n\tupdateCanvas1(x:number, y:number): void {\n\n\t\tconst r = this.canvas1.getBoundingClientRect();\n\t\tx = Math.min(Math.max(x - r.left, 0), this.width);\n\t\ty = Math.min(Math.max(y - r.top, 0), this.width);\n\n\t\tthis.color.s = Math.round(100 * x / this.width);\n\t\tthis.color.b = 100 - Math.round(100 * y / this.width);\n\n\t\tthis.target.style.left = `${x}px`;\n\t\tthis.target.style.top = `${y}px`;\n\n\t\tthis.update();\n\t}\n\n\tupdateCanvas2(x:number): void {\n\n\t\tconst r = this.canvas2.getBoundingClientRect();\n\t\tx = Math.min(Math.max(x - r.left, 1), this.width - 1);\n\n\t\tthis.color.h = 360 * x / this.width;\n\n\t\tthis.dragger.style.left = `${x}px`;\n\n\t\tthis.update();\n\t}\n\n\n}\nexport class ColorItem extends Item {\n\tinput: HTMLInputElement = el('input') as HTMLInputElement;\n\tcolorBox: HTMLElement = el('div');\n\tpanel: ColorPanel | null = null;\n\n\tafterCreate(): void {\n\t\tthis.panel! = new ColorPanel(this, this.el);\n\t}\n\n\tprotected addEventListeners(): void {\n\n\t\tthis.input.addEventListener('change', () => {\n\t\t\tthis.setValue(this.input.value);\n\t\t});\n\n\t\tthis.colorBox.addEventListener('click', () => {\n\t\t\tif(!this.panel!.created) this.panel!.create();\n\t\t\telse this.panel!.destroy();\n\t\t});\n\n\t\twindow.addEventListener('keydown', (e:KeyboardEvent)=> {\n\t\t\tif(e.key === 'Enter') this.setValue(this.input.value);\n\t\t});\n\n\t}\n\n\tprotected createContent(): void {\n\t\tthis.colorBox = el('div', );\n\t\tthis.colorBox.classList.add(c.box);\n\t\tthis.content.appendChild(this.colorBox);\n\n\t\tthis.input = el('input') as HTMLInputElement;\n\t\tthis.input.type = 'text';\n\t\tthis.input.classList.add(c.input);\n\t\tthis.content.appendChild(this.input);\n\n\n\t}\n\n\tsetValue(value: any): void {\n\n\t\tif (check.isNull(value) || check.isUndefined(value) || value === '') {\n\t\t\tvalue = '#FFFFFF';\n\t\t}\n\t\tvalue = fixHex(value);\n\n\t\tif(this.panel!.created){\n\t\t\tthis.panel!.reverseUpdate();\n\t\t}\n\n\t\tsuper.setValue(value);\n\t}\n\n\trefreshDom(): void {\n\n\t\tthis.colorBox.style.setProperty('--active-color', this.value);\n\t\tthis.input.value = this.value;\n\n\t\tsuper.refreshDom();\n\t}\n}\n\n"],
  "mappings": "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",
  "names": []
}
