import{el as i}from"@fils/utils";import n from"../../../utils/check";import{uiDownarrowHlt as u}from"@fils/ui-icons";import{CSS_UI as p}from"../../../partials/cssClasses";import{Item as o}from"../Item";const a={type:"number",input:"_ui-number-input",buttons:"_ui-number-buttons",btnIncrease:"_ui-number-btn-increase",btnDecrease:"_ui-number-btn-decrease"};export class NumberItem extends o{constructor(){super(...arguments);this.inputElements=[];this.max=null;this.min=null;this.step=.01;this.decimals=2;this.originalDataType="number";this.limitNumber=t=>{let e=t;return this.max&&(e=Math.min(e,this.max)),this.min&&(e=Math.max(e,this.min)),e=Math.round(e*Math.pow(10,this.decimals))/Math.pow(10,this.decimals),e}}addEventListeners(){for(const t of this.inputElements)t.input.valueAsNumber=t.value,t.input.addEventListener("change",()=>{t.value=t.input.valueAsNumber,t.value=this.limitNumber(t.value),t.input.valueAsNumber=t.value,this.setValue()}),t.buttonIncrease.addEventListener("click",()=>{t.value+=this.step,t.value=this.limitNumber(t.value),t.input.valueAsNumber=t.value,this.setValue()}),t.buttonDecrease.addEventListener("click",()=>{t.value-=this.step,t.value=this.limitNumber(t.value),t.input.valueAsNumber=t.value,this.setValue()})}setValue(t){t&&(this.originalDataType=n.getType(t));let e=[];for(const r of this.inputElements)e.push(r.value);this.value=e;let s=null;if(this.originalDataType==="number")s=e[0];else if(this.originalDataType==="array")s=e;else if(this.originalDataType==="object"){s={};let r=0;for(const m in this.object[this.key])s[m]=e[r]}this.object[this.key]=s,this.refreshDom()}createInput(t){return{value:t,placeholder:"Value",wrapper:null,input:null,buttonIncrease:null,buttonDecrease:null}}createInputs(t){if(this.inputElements=[],n.isNumber(t))this.inputElements.push(this.createInput(t));else if(n.isArray(t))for(const e of t)this.inputElements.push(this.createInput(e));else if(n.isObject(t))for(const e in t){const s=this.createInput(t[e]);s.placeholder=e,this.inputElements.push(s)}}createInputContent(t){t.wrapper=i("div",a.input),t.input=i("input"),t.input.type="number",t.input.placeholder=t.placeholder,this.min&&(t.input.min=this.min.toString()),this.max&&(t.input.max=this.max.toString()),this.step&&(t.input.step=this.step.toString()),t.wrapper.appendChild(t.input);const e=i("div",a.buttons);t.buttonIncrease=i("button",a.btnIncrease),t.buttonIncrease.innerHTML=u,t.buttonDecrease=i("button",a.btnDecrease),t.buttonDecrease.innerHTML=u,e.appendChild(t.buttonIncrease),e.appendChild(t.buttonDecrease),t.wrapper.appendChild(e),this.inputElements.length>2&&(t.buttonIncrease.classList.add(`.${p.utility.hidden}`),t.buttonDecrease.classList.add(`.${p.utility.hidden}`)),this.content.appendChild(t.wrapper)}createContent(){this.max=this.params.max?this.params.max:null,this.min=this.params.min?this.params.min:null,this.step=this.params.step?this.params.step:this.step,this.decimals=this.params.decimals?this.params.decimals:this.decimals,this.createInputs(this.object[this.key]);for(const t of this.inputElements)this.createInputContent(t)}}
//# sourceMappingURL=NumberItem.js.map
